kmsPeers:
  # Number of replicas managed by each statefulset
  count: 1

kmsConnector:
  enabled: false

kmsCore:
  image:
    name: ghcr.io/zama-ai/kms/core-service-enclave
    tag: <version>
  envFrom:
    configmap:
      name: kms-ci-1
      key:
        coreClientS3Endpoint: CORE_CLIENT__S3_ENDPOINT
        privateVaultStorageBucket: KMS_CORE__PRIVATE_VAULT__STORAGE__S3__BUCKET
        privateVaultStoragePrefix: KMS_CORE__PRIVATE_VAULT__STORAGE__S3__PREFIX
        privateVaultKeychainAWSKMSRootKeySpec: KMS_CORE__PRIVATE_VAULT__KEYCHAIN__AWS_KMS__ROOT_KEY_SPEC
        privateVaultKeychainAWSKMSRootKeyID: KMS_CORE__PRIVATE_VAULT__KEYCHAIN__AWS_KMS__ROOT_KEY_ID
        publicVaultStorageBucket: KMS_CORE__PUBLIC_VAULT__STORAGE__S3__BUCKET
        publicVaultStoragePrefix: KMS_CORE__PUBLIC_VAULT__STORAGE__S3__PREFIX
        backupVaultStorageBucket: KMS_CORE__BACKUP_VAULT__STORAGE__S3__BUCKET
        backupVaultStoragePrefix: KMS_CORE__BACKUP_VAULT__STORAGE__S3__PREFIX
        backupVaultKeychainAWSKMSRootKeySpec: KMS_CORE__BACKUP_VAULT__KEYCHAIN__AWS_KMS__ROOT_KEY_SPEC
        backupVaultKeychainAWSKMSRootKeyID: KMS_CORE__BACKUP_VAULT__KEYCHAIN__AWS_KMS__ROOT_KEY_ID
  aws:
    region: eu-west-1
  publicVault:
    s3:
      enabled: true
      path: ""
  privateVault:
    s3:
      enabled: true
      path: ""
  storage:
    storageClassName: gp3
    capacity: 5Gi
  serviceMonitor:
    enabled: false
  resources:
    requests:
      memory: 96Gi
      cpu: 48
    limits:
      memory: 96Gi
      ephemeralStorage: 1Gi
      grpcTimeout: 360
      grpcMaxMessageSize: 104857600
  nodeSelector:
    karpenter.sh/nodepool: kms-bench-spot-64
  tolerations:
    - key: karpenter.sh/nodepool
      effect: NoSchedule
      operator: Equal
      value: kms-bench-spot-64

kmsCoreClient:
  enabled: true
  nameOverride: kms-core-client-centralized-ci
  image:
    name: ghcr.io/zama-ai/kms/core-client
    tag: <version>
  envFrom:
    configmap:
      name: kms-ci-1
  num_majority: 5 # 2 when 4 parties and 5 when 13 parties
  num_reconstruct: 9 # 3 when 4 parties and 9 when 13 parties
  decryption_mode: NoiseFloodSmall
  fhe_parameter: Default
  resources:
    requests:
      memory: 24Gi
      cpu: 4
    limits:
      memory: 24Gi
      cpu: 4
  nodeSelector:
    karpenter.sh/nodepool: zws-pool
  tolerations:
    - key: karpenter.sh/nodepool
      effect: NoSchedule
      operator: Equal
      value: zws-pool

kmsInit:
  enabled: false

kmsGenKeys:
  enabled: true
  keyGenArgs: "insecure-key-gen"
  crsGenArgs: "insecure-crs-gen --max-num-bits 2048"
  configmap:
    name: kms-keys
  resources:
    requests:
      memory: 16Gi
      cpu: 3
    limits:
      memory: 16Gi
      cpu: 3
  nodeSelector:
    karpenter.sh/nodepool: zws-pool
  tolerations:
    - key: karpenter.sh/nodepool
      effect: NoSchedule
      operator: Equal
      value: zws-pool

environment: dev

tracing:
  enabled: false
  endpoint: "http://otel-deployment-opentelemetry-collector.observability.svc.cluster.local:4317"
  metrics:
    enabled: false
    interval_sec: 20

socat:
  image:
    name: alpine/socat
    tag: latest

rustLog: info
kmsGenCertAndKeys:
  enabled: false
kmsCoreClientTesting:
  enabled: false
mtls:
  enabled: false
minio:
  enabled: false
