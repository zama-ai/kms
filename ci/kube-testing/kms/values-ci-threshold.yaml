kmsPeers:
  count: 4

kmsConnector:
  enabled: false

kmsCoreClient:
  enabled: true
  nameOverride: kms-core-client-threshold
  image:
    name: ghcr.io/zama-ai/kms/core-client
    tag: v0.12.0
  envFrom:
    configmap:
      name: kms-core-client-threshold-config
  num_majority: 2 # 2 when 4 parties and 5 when 13 parties
  num_reconstruct: 3 # 3 when 4 parties and 9 when 13 parties
  decryption_mode: NoiseFloodSmall
  fhe_parameter: Default
  resources:
    requests:
      memory: 2Gi
      cpu: 1
    limits:
      memory: 4Gi
      cpu: 1

kmsInit:
  enabled: true

kmsCore:
  image:
    name: ghcr.io/zama-ai/kms/core-service
    tag: v0.12.0
  thresholdMode:
    initializationScript:
      enabled: true
    enabled: true
    multiplier: 2.0
    maxInterval: 60
    initialIntervalMs: 100
    cleanupIntervalSecs: 2
    thresholdValue: 1
    numSessionsPreproc: 12
    peersList:
      - id: 1
        host: kms-core-1
        port: 50001
      - id: 2
        host: kms-core-2
        port: 50001
      - id: 3
        host: kms-core-3
        port: 50001
      - id: 4
        host: kms-core-4
        port: 50001
  publicVault:
    s3:
      enabled: true
      bucket: kms-public
      path: ""
  privateVault:
    s3:
      enabled: true
      bucket: kms-private
      path: ""
  rateLimiter:
    bucketSize: 50000
  aws:
    region: eu-west-1
  storage:
    storageClassName: gp3
    capacity: 5Gi
  serviceMonitor:
    enabled: false
  resources:
    requests:
      memory: 1Gi
      cpu: 1
    limits:
      memory: 1Gi
      cpu: 1
      ephemeralStorage: 1Gi
      grpcTimeout: 360
      grpcMaxMessageSize: 104857600

socat:
  image:
    name: alpine/socat
    tag: latest

rustLog: info

environment: dev

minio:
  enabled: true
  endpoint: "http://minio:9000"
  username: kms-access-key-id
  password: kms-secret-access-key


kmsGenKeys:
  enabled: false
  keyGenArgs: "insecure-key-gen"
  crsGenArgs: "insecure-crs-gen --max-num-bits 2048"
  configmap:
    name: kms-keys
  resources:
    requests:
      memory: 6Gi
      cpu: 2
    limits:
      memory: 6Gi
      cpu: 2

mtls:
  enabled: false
redis:
  enabled: false
tracing:
  enabled: false
kyverno:
  enabled: false

# Cronjob kubernetes
# Store the key-id and crs-id in files for later use in /app/key-files volume
# Then launch a test of the KMS core client