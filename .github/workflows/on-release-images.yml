name: "[Release KMS] - Create Docker Images"

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      ref:
        type: string
        description: 'Branch, tag or SHA to generate the Docker images from. (Default main)'
        required: false
        default: 'main'

permissions: {}

jobs:
  docker-golden-image:
    uses: zama-ai/ci-templates/.github/workflows/common-docker.yml@0e191f066fcd7d361c406f99559c7bf0e9f0879b
    permissions:
      actions: read
      contents: read
      id-token: write
      pull-requests: read
      packages: write
      attestations: write
    with:
      docker-file: "./docker/base/Dockerfile"
      working-directory: "./base"
      push_image: true
      image-name: 'kms/rust-golden-image'
      app-cache-dir: 'kms-base'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}

  docker-kms-core-client:
    needs: docker-golden-image
    uses: zama-ai/ci-templates/.github/workflows/common-docker.yml@0e191f066fcd7d361c406f99559c7bf0e9f0879b
    permissions:
      actions: read
      contents: read
      id-token: write
      pull-requests: read
      packages: write
      attestations: write
    with:
      docker-file: "./docker/core-client/Dockerfile"
      working-directory: "./core-client"
      push_image: true
      image-name: 'kms/core-client'
      ref: ${{ inputs.ref || '' }}
      app-cache-dir: 'kms-core-client'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}

  docker-kms-service:
    needs: docker-golden-image
    uses: ./.github/workflows/common-docker-big-instance.yml
    permissions:
      actions: read
      contents: read
      id-token: write
      pull-requests: read
      packages: write
      attestations: write
    with:
      docker-file: "./docker/core/service/Dockerfile"
      working-directory: "./core/service"
      push_image: true
      image-name: 'kms/core-service'
      ref: ${{ inputs.ref || '' }}
      app-cache-dir: 'kms'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}
      SLAB_ACTION_TOKEN: ${{ secrets.SLAB_ACTION_TOKEN }}
      SLAB_BASE_URL: ${{ secrets.SLAB_BASE_URL }}
      JOB_SECRET: ${{ secrets.JOB_SECRET }}

  docker-nitro-enclave:
    needs:
      - docker-kms-service
    uses: ./.github/workflows/common-nitro-enclave.yml
    permissions:
      actions: read
      contents: write
      id-token: write
      pull-requests: read
      packages: write
      attestations: write
    with:
      docker-file-enclave: "./docker/core/service/enclave.dockerfile"
      working-directory: "./core/service"
      push_image: true
      image-name: 'kms/core-service'
      image-enclave-name: 'kms/core-service-enclave'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
