name: wasm-testing

on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        required: true
      wasm-test-feature:
        type: string
        required: false
        default: "-F wasm_tests"
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN:
        required: true
      NPM_TOKEN:
        required: false

env:
  NPM_TAG: "test"

# No top-level permissions needed - job-level permissions are more specific
permissions: {}

jobs:
  wasm-testing:
    name: wasm-testing
    permissions:
      checks: write # Required to create GitHub checks for test results
      packages: read # Required to read GitHub packages/container registry
      pull-requests: write # Required to create comments on pull requests
      actions: read # Required to read workflow run information and download artifacts
      contents: read # Required to checkout repository code
    timeout-minutes: 500
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Checkout Project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          token: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
          persist-credentials: true

      - name: Get Rust version
        env:
          GH_WORKSPACE: ${{ github.workspace }}
        run: |
          version="$(cat "$GH_WORKSPACE/toolchain.txt")"
          echo "RUST_IMAGE_VERSION=$version" >> "$GITHUB_ENV"

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8 # v1.10.1
        with:
          toolchain: ${{ env.RUST_IMAGE_VERSION }}

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "26.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }} # Add github token to avoid rate limit see docs https://github.com/arduino/setup-protoc

      # WASM handling
      - name: Install
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build wasm with tests
        env:
          WASM_TEST_FEATURE: ${{ inputs.wasm-test-feature }}
        run: wasm-pack build --target nodejs . --no-default-features "${WASM_TEST_FEATURE}"

      - name: Install node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20

      - name: Generate wasm test files
        env:
          WASM_TEST_FEATURE: ${{ inputs.wasm-test-feature }}
        run: |
          cargo test test_user_decryption_threshold_and_write_transcript "${WASM_TEST_FEATURE}" --lib
          cargo test test_user_decryption_centralized_and_write_transcript "${WASM_TEST_FEATURE}" --lib

      - name: Test wasm
        run: node --test tests/js

      # NPM package handling
      - name: Set NPM version tag to latest
        if: ${{ !github.event.release.prerelease }}
        run: |
          echo "NPM_TAG=latest" >> "${GITHUB_ENV}"

      - name: Set NPM version tag to prerelease
        if: ${{ github.event.release.prerelease }}
        run: |
          echo "NPM_TAG=prerelease" >> "${GITHUB_ENV}"

      # Node package build and publish
      - name: NPM build node package
        working-directory: ./core/service
        run: |
          rm -rf pkg
          wasm-pack build --target nodejs . --no-default-features
          sed -i 's/"kms"/"node-tkms"/g' pkg/package.json
          echo "# node-tkms" > pkg/README.md

      - name: NPM publish Node package
        uses: JS-DevTools/npm-publish@19c28f1ef146469e409470805ea4279d47c3d35c # v3.1.1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./core/service/pkg/package.json
          dry-run: true
          provenance: false # change to true when repo is public (see #1048)
          tag: ${{ env.NPM_TAG }}

      # Web package build and publish
      - name: NPM build web package
        working-directory: ./core/service
        run: |
          rm -rf pkg
          wasm-pack build --target web . --no-default-features
          sed -i 's/"kms"/"tkms"/g' pkg/package.json
          echo "# tkms" > pkg/README.md

      - name: NPM publish web package
        uses: JS-DevTools/npm-publish@19c28f1ef146469e409470805ea4279d47c3d35c # v3.1.1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./core/service/pkg/package.json
          dry-run: true
          provenance: false # change to true when repo is public (see #1048)
          tag: ${{ env.NPM_TAG }}

      - name: Remove aws credentials file
        run: |
          rm -rf ~/.aws
