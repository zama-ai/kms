name: docker-build

on:
  #=======================================================
  release:
    types: [published]
  #=======================================================
  workflow_dispatch:
    inputs:
      testing:
        description: "Launch performance testing"
        default: false
        required: true
        type: boolean
      deployment_type:
        description: "Deployment type"
        required: true
        default: "threshold"
        type: choice
        options:
          - "threshold"
          - "thresholdWithEnclave"
          - "centralized"
          - "centralizedWithEnclave"
  #=======================================================
  workflow_call:
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN:
        required: true
      AWS_ACCESS_KEY_S3_USER:
        required: true
      AWS_SECRET_KEY_S3_USER:
        required: true
      CGR_USERNAME:
        required: true
      CGR_PASSWORD:
        required: true
      SLAB_ACTION_TOKEN:
        required: true
      SLAB_BASE_URL:
        required: true
      JOB_SECRET:
        required: true
    outputs:
      image_tag:
        description: "Docker Tag generated by this task"
        value: "${{ jobs.golden-image.outputs.image_tag }}"
      enclave_pcr0:
        description: "Enclave PCR0 generated by this task"
        value: "${{ jobs.enclave.outputs.enclave_pcr0 }}"
      enclave_pcr1:
        description: "Enclave PCR1 generated by this task"
        value: "${{ jobs.enclave.outputs.enclave_pcr1 }}"
      enclave_pcr2:
        description: "Enclave PCR2 generated by this task"
        value: "${{ jobs.enclave.outputs.enclave_pcr2 }}"

concurrency:
  group: service-${{ github.ref }}
  cancel-in-progress: false

permissions: {}

jobs:
  start-amd64-runner:
    name: docker-build/start-amd64-runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner-amd64.outputs.label }}
    steps:
      - name: Start EC2 runner AMD64
        id: start-ec2-runner-amd64
        uses: zama-ai/slab-github-runner@79939325c3c429837c10d6041e4fd8589d328bac # v1.4.1
        with:
          mode: start
          github-token: ${{ secrets.SLAB_ACTION_TOKEN }}
          slab-url: ${{ secrets.SLAB_BASE_URL }}
          job-secret: ${{ secrets.JOB_SECRET }}
          backend: aws
          profile: docker-big-instance

  ############################################################################
  # Builds Docker image for base Rust Golden Image
  #
  golden-image:
    name: docker-build/golden-image (bpr)
    needs: start-amd64-runner
    uses: zama-ai/ci-templates/.github/workflows/common-docker.yml@3d8b1adcb5504fef30223016d459e3e38b36f9d1
    permissions:
      actions: read # Required to read workflow run information
      contents: read # Required to checkout repository code
      id-token: write # Required for OIDC authentication
      pull-requests: read # Required to read pull request information
      packages: write # Required to publish Docker images
      attestations: write # Required to create build attestations
    with:
      docker-file: "./docker/base/Dockerfile"
      working-directory: "./base"
      push_image: true
      image-name: "kms/rust-golden-image"
      app-cache-dir: "kms-base"
      use-cgr-secrets: true
      # runs-on-amd: "large_ubuntu_32"
      runs-on-amd: ${{ needs.start-amd64-runner.outputs.label }}
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}
      CGR_USERNAME: ${{ secrets.CGR_USERNAME }}
      CGR_PASSWORD: ${{ secrets.CGR_PASSWORD }}

  ############################################################################
  # Builds Docker image for core-client
  #
  core-client:
    name: docker-build/core-client (bpr)
    needs:
      - start-amd64-runner
      - golden-image
    uses: zama-ai/ci-templates/.github/workflows/common-docker.yml@3d8b1adcb5504fef30223016d459e3e38b36f9d1
    permissions:
      actions: read # Required to read workflow run information
      contents: read # Required to checkout repository code
      id-token: write # Required for OIDC authentication
      pull-requests: read # Required to read pull request information
      packages: write # Required to publish Docker images
      attestations: write # Required to create build attestations
    with:
      docker-file: "./docker/core-client/Dockerfile"
      working-directory: "./core-client"
      push_image: true
      image-name: "kms/core-client"
      app-cache-dir: "kms-core-client"
      use-cgr-secrets: true
      # runs-on-amd: "large_ubuntu_32"
      runs-on-amd: ${{ needs.start-amd64-runner.outputs.label }}
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}
      CGR_USERNAME: ${{ secrets.CGR_USERNAME }}
      CGR_PASSWORD: ${{ secrets.CGR_PASSWORD }}

  ############################################################################
  # Builds the core service Docker image
  #
  core-service:
    name: docker-build/core-service (bpr)
    needs:
      - start-amd64-runner
      - golden-image
    uses: zama-ai/ci-templates/.github/workflows/common-docker.yml@3d8b1adcb5504fef30223016d459e3e38b36f9d1
    permissions:
      actions: read # Required to read workflow run information
      contents: read # Required to checkout repository code
      id-token: write # Required for OIDC authentication
      pull-requests: read # Required to read pull request information
      packages: write # Required to publish Docker images
      attestations: write # Required to create build attestations
    with:
      docker-file: "./docker/core/service/Dockerfile"
      working-directory: "./core/service"
      push_image: true
      image-name: "kms/core-service"
      app-cache-dir: "kms"
      use-cgr-secrets: true
      # runs-on-amd: "large_ubuntu_32"
      runs-on-amd: ${{ needs.start-amd64-runner.outputs.label }}
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}
      CGR_USERNAME: ${{ secrets.CGR_USERNAME }}
      CGR_PASSWORD: ${{ secrets.CGR_PASSWORD }}

  ############################################################################
  # Builds AWS Nitro Enclave image for secure execution
  #
  enclave:
    name: docker-build/core-service-enclave (bpr)
    needs:
      - start-amd64-runner
      - core-service
    uses: ./.github/workflows/common-nitro-enclave.yml
    permissions:
      actions: read # Required to read workflow run information
      contents: write # Required to publish packages
      id-token: write # Required for OIDC token generation
      pull-requests: read # Required to read pull request information
      packages: write # Required to publish packages
      attestations: write # Required to write attestations
    with:
      docker-file-enclave: "./docker/core/service/enclave.dockerfile"
      working-directory: "./core/service"
      push_image: true
      image-name: "kms/core-service"
      image-enclave-name: "kms/core-service-enclave"
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      CGR_USERNAME: ${{ secrets.CGR_USERNAME }}
      CGR_PASSWORD: ${{ secrets.CGR_PASSWORD }}

  ############################################################################
  # Launch performance testing
  ############################################################################
  performance-testing:
    name: docker-build/performance-testing
    needs:
      - start-amd64-runner
      - golden-image
      - core-client
      - core-service
      - enclave
    runs-on: ubuntu-latest
    steps:
      - name: Launch performance testing
        env:
          GH_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            repos/zama-ai/kms-testing/dispatches \
            -f 'event_type=performance-testing' \
            -F "client_payload[deployment_type]={{ inputs.deployment_type }}" \
            -F "client_payload[kms_core_image_tag]={{ needs.golden-image.outputs.image_tag }}" \
            -F "client_payload[kms_core_client_image_tag]={{ needs.core-client.outputs.image_tag }}"

  ############################################################################
  # Stop EC2 runner
  ############################################################################
  stop-runners:
    name: docker-build/stop-runners
    needs:
      - start-amd64-runner
      - golden-image
      - core-client
      - core-service
      - enclave
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Stop AMD64 runner
        uses: zama-ai/slab-github-runner@79939325c3c429837c10d6041e4fd8589d328bac # v1.4.1
        with:
          mode: stop
          github-token: ${{ secrets.SLAB_ACTION_TOKEN }}
          slab-url: ${{ secrets.SLAB_BASE_URL }}
          job-secret: ${{ secrets.JOB_SECRET }}
          label: ${{ needs.start-amd64-runner.outputs.label }}
