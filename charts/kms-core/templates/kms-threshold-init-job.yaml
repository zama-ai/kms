{{- if and .Values.kmsInit.enabled .Values.kmsCore.thresholdMode.enabled -}}
{{- $kmsCoreName := include "kmsCoreName" . }}
{{- $kmsInitName := include "kmsInitJobName" . }}
{{- $peersIDList := untilStep (include "kmsPeersStartID" . | int) (.Values.kmsPeers.count | add1 | int) 1  }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: kms-threshold-init-job
    app.kubernetes.io/name: {{ $kmsInitName }}
  annotations:
    "helm.sh/hook-weight": "0"
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
  name: {{ $kmsInitName }}
spec:
  template:
    metadata:
      labels:
        app: kms-threshold-init-job
        app.kubernetes.io/name: {{ $kmsInitName }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-kms-core
          image: {{ .Values.kubeUtils.image.name }}:{{ .Values.kubeUtils.image.tag }}
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "starting init process for kms-core to be ready to be initialized"
              while true
                  do
                  grpc_health_probe -addr="http://{{ $kmsCoreName }}-${KMS_CORE__THRESHOLD__MY_ID}:{{- $.Values.kmsCore.ports.peer }}"
                  healthStatus=$?
                  if [ ${healthStatus} -eq 0 ]; then
                    echo "kms-core http://{{ $kmsCoreName }}-${KMS_CORE__THRESHOLD__MY_ID}:{{- $.Values.kmsCore.ports.peer }} is already initialized"
                    break
                  fi
                  if [ ${healthStatus} -eq {{ .Values.kmsPeers.count }} ]; then
                    echo "kms-core http://{{ $kmsCoreName }}-${KMS_CORE__THRESHOLD__MY_ID}:{{- $.Values.kmsCore.ports.peer }} is reachable but not yet initialized"
                    break
                  fi;
                  echo "failed to connect to kms-core http://{{ $kmsCoreName }}-${KMS_CORE__THRESHOLD__MY_ID}:{{- $.Values.kmsCore.ports.peer }}, retrying"
                  sleep 1
                done
              done
              echo "Kms-core http://{{ $kmsCoreName }}-${KMS_CORE__THRESHOLD__MY_ID}:{{- $.Values.kmsCore.ports.peer }} has been reached"
          env:
            {{- if .Values.kmsCore.thresholdMode.enabled }}
            {{- if .Values.kmsPeers.id }}
            - name: KMS_CORE__THRESHOLD__MY_ID
              value: "{{ .Values.kmsPeers.id }}"
            {{- else }}
            - name: KMS_CORE__THRESHOLD__MY_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.kmsCore.envFrom.configmap.name }}
                  key: {{ .Values.kmsCore.envFrom.configmap.key.thresholdId }}
            {{- end }}
            {{- end }}
      containers:
        - name: threshold-init
          image: {{ .Values.kmsCore.image.name }}:{{ .Values.kmsCore.image.tag }}
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              KMS_INIT_TIMEOUT_SECONDS={{ .Values.kmsInit.timeoutSeconds}}
              echo "Peer http://{{ $kmsCoreName }}-${KMS_CORE__THRESHOLD__MY_ID}:{{- $.Values.kmsCore.ports.peer }} to initialize"
              timeout ${KMS_INIT_TIMEOUT_SECONDS} bin/kms-init --addresses http://{{ $kmsCoreName }}-${KMS_CORE__THRESHOLD__MY_ID}:{{- $.Values.kmsCore.ports.peer }}
              exit 0
          env:
            {{- if .Values.kmsCore.thresholdMode.enabled }}
            {{- if .Values.kmsPeers.id }}
            - name: KMS_CORE__THRESHOLD__MY_ID
              value: "{{ .Values.kmsPeers.id }}"
            {{- else }}
            - name: KMS_CORE__THRESHOLD__MY_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.kmsCore.envFrom.configmap.name }}
                  key: {{ .Values.kmsCore.envFrom.configmap.key.thresholdId }}
            {{- end }}
            {{- end }}
      restartPolicy: Never
      imagePullSecrets:
        - name: registry-credentials
      {{- with .Values.kmsInit.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kmsInit.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kmsInit.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
